{"version":3,"sources":["components/NavMenu.js","components/Layout.js","components/Home.js","components/FetchData.js","components/Counter.js","components/about.js","components/services/Cryptoverse.js","components/services/WebServices.js","components/services/Automation.js","components/Services.js","components/services/cryptoverse/CryptoverseServices.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMenu","props","toggleNavbar","bind","state","collapsed","this","setState","Navbar","className","dark","fixed","Container","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","isOpen","navbar","NavItem","NavLink","Component","displayName","name","Layout","children","Home","FetchData","forecasts","loading","populateWeatherData","contents","renderForecastsTable","id","fetch","response","json","data","aria-labelledby","map","forecast","key","date","temperatureC","temperatureF","summary","Counter","currentCount","incrementCounter","aria-live","About","Cryptoverse","WebServices","Automation","Services","Card","style","width","Img","variant","src","Body","Title","Text","Button","CryptoverseServices","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","document","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.075a3309.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <header>\r\n        <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3 bg-dark\" dark fixed=\"top\">\r\n          <Container>\r\n            <NavbarBrand tag={Link} to=\"/\">Sensible Programming</NavbarBrand>\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n            <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n              <ul className=\"navbar-nav flex-grow\">\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-light\" to=\"/\">Home</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink tag={Link} className=\"text-light\" to=\"/services/home\">Services</NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <NavLink tag={Link} className=\"text-light\" to=\"/about\">About</NavLink>\r\n                </NavItem>\r\n              </ul>\r\n            </Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <NavMenu />\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Carousel, Button } from 'react-bootstrap';\r\n\r\nexport class Home extends Component {\r\n  static displayName = Home.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n            <h4>Creating real world solutions for real world problems.</h4>\r\n            \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\n <div style={{ height: '300px' }}>\r\n            <Carousel>\r\n                <Carousel.Item>\r\n                    <img\r\n                        className=\"d-block w-100 \"\r\n                        src={process.env.PUBLIC_URL + \"/images/23036.jpg\"}\r\n                        alt=\"First slide\"\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>Enter the Crypto verse</h3>\r\n                        <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                            className=\"d-block w-100 h-50\"\r\n                        src={process.env.PUBLIC_URL + \"/images/OcTozpj.jpg\"}\r\n                        alt=\"Second slide\"\r\n                    />\r\n\r\n                    <Carousel.Caption>\r\n                        <h3>Establish your web presense</h3>\r\n                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n                <Carousel.Item>\r\n                    <img\r\n                            className=\"d-block w-100 h-50\"\r\n                        src={process.env.PUBLIC_URL + \"/images/23073.jpg\"}\r\n                        alt=\"Third slide\"\r\n                    />\r\n\r\n                    <Carousel.Caption>\r\n                        <h3>Begin automation</h3>\r\n                        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            </Carousel>\r\n            </div>\r\n     \r\n */\r\n","import React, { Component } from 'react';\r\n\r\nexport class FetchData extends Component {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { forecasts: [], loading: true };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.populateWeatherData();\r\n  }\r\n\r\n  static renderForecastsTable(forecasts) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Date</th>\r\n            <th>Temp. (C)</th>\r\n            <th>Temp. (F)</th>\r\n            <th>Summary</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {forecasts.map(forecast =>\r\n            <tr key={forecast.date}>\r\n              <td>{forecast.date}</td>\r\n              <td>{forecast.temperatureC}</td>\r\n              <td>{forecast.temperatureF}</td>\r\n              <td>{forecast.summary}</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : FetchData.renderForecastsTable(this.state.forecasts);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Weather forecast</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateWeatherData() {\r\n    const response = await fetch('weatherforecast');\r\n    const data = await response.json();\r\n    this.setState({ forecasts: data, loading: false });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Counter extends Component {\r\n  static displayName = Counter.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Counter</h1>\r\n\r\n        <p>This is a simple example of a React component.</p>\r\n\r\n        <p aria-live=\"polite\">Current count: <strong>{this.state.currentCount}</strong></p>\r\n\r\n        <button className=\"btn btn-primary\" onClick={this.incrementCounter}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class About extends Component {\r\n    static displayName = About.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>About</h1>\r\n\r\n        <p>Still thinking about it.</p>\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Cryptoverse extends Component {\r\n    static displayName = Cryptoverse.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n            <h1>Cryptoverse services</h1>\r\n\r\n        <p>Still thinking about it.</p>\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class WebServices extends Component {\r\n    static displayName = WebServices.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Web services</h1>\r\n\r\n        <p>Still thinking about it.</p>\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport class Automation extends Component {\r\n    static displayName = Automation.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>automation services</h1>\r\n\r\n        <p>Still thinking about it.</p>\r\n\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, Carousel, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nexport class Services extends Component {\r\n    static displayName = Services.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { currentCount: 0 };\r\n    this.incrementCounter = this.incrementCounter.bind(this);\r\n  }\r\n\r\n  incrementCounter() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Available Services</h1>\r\n\r\n            <ul className=\"list-inline\">\r\n                <li>\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/bg-crypto.jpg\"} />\r\n                        <Card.Body>\r\n                            <Card.Title>Cryptoverse</Card.Title>\r\n                            <Card.Text>\r\n                                Enter the cryptoverse with these crypto related services.\r\n                            </Card.Text>\r\n                            <Link to=\"/services/crypto/home\">\r\n                                <Button variant=\"dark\">Enter the cryptoverse</Button>\r\n                            </Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </li>\r\n                <li>\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/bg-web.jpg\"} />\r\n                        <Card.Body>\r\n                            <Card.Title>Web</Card.Title>\r\n                            <Card.Text>\r\n                                Establish your presense on the world wide web\r\n                            </Card.Text>\r\n                            <Link to=\"/services/web\">\r\n                                <Button variant=\"dark\">Enter the web</Button>\r\n                            </Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </li>\r\n                <li>\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/bg-automation.jpg\"} />\r\n                        <Card.Body>\r\n                            <Card.Title>Automation</Card.Title>\r\n                            <Card.Text>\r\n                                Reduce common tasks so you can do the work you actually love.\r\n                            </Card.Text>\r\n                            <Link to=\"/services/automation\">\r\n                                <Button variant=\"dark\">Automate</Button>\r\n                            </Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </li>\r\n            </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Card, Carousel, Button } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n//import  AddOnList from \"../../common/AddOnList\";\r\n\r\nexport class CryptoverseServices extends Component {\r\n    static displayName = CryptoverseServices.name;\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    //this.state = { currentaddons: [] };\r\n    }\r\n\r\n    //setAddOns(x) {\r\n    //    console.log(x);\r\n    //    this.setState({\r\n    //        currentaddons: x\r\n    //    });\r\n    //}\r\n    /*\r\n     *  <AddOnList\r\n                label=\"addme\"\r\n                update={e => this.setAddOns(e)}\r\n                value={this.state.currentaddons}\r\n                readonly={false}\r\n            ></AddOnList>*/\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n            <h1>Available Services</h1>\r\n          \r\n\r\n            <ul className=\"list-inline\">\r\n                <li>\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/bg-crypto.jpg\"} />\r\n                        <Card.Body>\r\n                            <Card.Title>NFT</Card.Title>\r\n                            <Card.Text>\r\n                                Create the next great NFT.\r\n                            </Card.Text>\r\n                            <Link to=\"/services/crypto\">\r\n                                <Button variant=\"dark\">Start creating</Button>\r\n                            </Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </li>\r\n                <li>\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Img variant=\"top\" src={process.env.PUBLIC_URL + \"/images/bg-web.jpg\"} />\r\n                        <Card.Body>\r\n                            <Card.Title>Smart contracts</Card.Title>\r\n                            <Card.Text> \r\n                                Start taking advantage of decentralized, trustless contracts.\r\n                            </Card.Text>\r\n                            <Link to=\"/services/web\">\r\n                                <Button variant=\"dark\">contact us</Button>\r\n                            </Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </li>                \r\n            </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { FetchData } from './components/FetchData';\r\nimport { Counter } from './components/Counter';\r\nimport { About } from './components/about';\r\nimport { Cryptoverse } from './components/services/Cryptoverse';\r\nimport { WebServices } from './components/services/WebServices';\r\nimport { Automation } from './components/services/Automation';\r\nimport { Services } from './components/Services';\r\nimport { CryptoverseServices } from './components/services/cryptoverse/CryptoverseServices';\r\n\r\n\r\nimport './custom.css'\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { currentCount: 0 };\r\n        /*\r\n         getSetting(\"dbversion\").then((setting)=>{\r\n            const defId = setting ? setting.value : null;\r\n            getArtists(defId).then((setting)=>{\r\n                \r\n            });\r\n         });\r\n         */\r\n    }\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Route exact path='/' component={Home} />\r\n            <Route path='/counter' component={Counter} />\r\n            <Route path='/services/home' component={Services} />\r\n            <Route path='/fetch-data' component={FetchData} />\r\n            <Route path='/about' component={About} />\r\n\r\n            <Route path='/services/web' component={WebServices} />\r\n            <Route path='/services/automation' component={Automation} />\r\n            <Route path='/services/crypto/home' component={CryptoverseServices} />\r\n            \r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n/* \r\n * <Route path='/services/crypto' component={Cryptoverse} />\r\n */\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport default function register () {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n\r\nregisterServiceWorker();\r\n\r\n"],"sourceRoot":""}